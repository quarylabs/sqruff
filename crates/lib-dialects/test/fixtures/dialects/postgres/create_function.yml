file:
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: FUNCTION
    - function_name:
      - function_name_identifier: add
    - function_parameter_list:
      - bracketed:
        - start_bracket: (
        - data_type:
          - keyword: integer
        - comma: ','
        - data_type:
          - keyword: integer
        - end_bracket: )
    - keyword: RETURNS
    - data_type:
      - keyword: integer
    - function_definition:
      - keyword: AS
      - quoted_literal: '''select $1 + $2;'''
      - language_clause:
        - keyword: LANGUAGE
        - naked_identifier: SQL
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: FUNCTION
    - function_name:
      - function_name_identifier: add
    - function_parameter_list:
      - bracketed:
        - start_bracket: (
        - data_type:
          - keyword: integer
        - comma: ','
        - data_type:
          - keyword: integer
        - end_bracket: )
    - keyword: RETURNS
    - data_type:
      - keyword: integer
    - function_definition:
      - keyword: AS
      - quoted_literal: '''select $1 + $2;'''
      - language_clause:
        - keyword: LANGUAGE
        - quoted_identifier: '''sql'''
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: OR
    - keyword: REPLACE
    - keyword: FUNCTION
    - function_name:
      - function_name_identifier: increment
    - function_parameter_list:
      - bracketed:
        - start_bracket: (
        - parameter: i
        - data_type:
          - keyword: integer
        - end_bracket: )
    - keyword: RETURNS
    - data_type:
      - keyword: integer
    - function_definition:
      - keyword: AS
      - quoted_literal: |-
          '
              BEGIN
                  RETURN i + 1;
              END;
          '
      - language_clause:
        - keyword: LANGUAGE
        - naked_identifier: plpgsql
      - keyword: VOLATILE
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: OR
    - keyword: REPLACE
    - keyword: FUNCTION
    - function_name:
      - function_name_identifier: increment
    - function_parameter_list:
      - bracketed:
        - start_bracket: (
        - parameter: i
        - data_type:
          - keyword: integer
        - end_bracket: )
    - keyword: RETURNS
    - data_type:
      - keyword: integer
    - function_definition:
      - keyword: AS
      - quoted_literal: |-
          '
              BEGIN
                  RETURN i + 1;
              END;
          '
      - language_clause:
        - keyword: LANGUAGE
        - naked_identifier: plpgsql
      - keyword: WINDOW
      - keyword: IMMUTABLE
      - keyword: STABLE
      - keyword: LEAKPROOF
      - keyword: RETURNS
      - keyword: 'NULL'
      - keyword: ON
      - keyword: 'NULL'
      - keyword: INPUT
      - keyword: EXTERNAL
      - keyword: SECURITY
      - keyword: DEFINER
      - keyword: ROWS
      - numeric_literal: '5'
      - keyword: SET
      - parameter: test_param
      - comparison_operator:
        - raw_comparison_operator: =
      - numeric_literal: '3'
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: OR
    - keyword: REPLACE
    - keyword: FUNCTION
    - function_name:
      - function_name_identifier: increment
    - function_parameter_list:
      - bracketed:
        - start_bracket: (
        - parameter: i
        - data_type:
          - keyword: integer
        - end_bracket: )
    - keyword: RETURNS
    - data_type:
      - keyword: integer
    - function_definition:
      - keyword: AS
      - quoted_literal: '''C:\\my_file.c'''
      - comma: ','
      - quoted_literal: '''symlink_c'''
      - language_clause:
        - keyword: LANGUAGE
        - naked_identifier: plpgsql
      - keyword: WINDOW
      - keyword: IMMUTABLE
      - keyword: STABLE
      - keyword: NOT
      - keyword: LEAKPROOF
      - keyword: CALLED
      - keyword: ON
      - keyword: 'NULL'
      - keyword: INPUT
      - keyword: EXTERNAL
      - keyword: SECURITY
      - keyword: DEFINER
      - keyword: COST
      - numeric_literal: '123'
      - keyword: ROWS
      - numeric_literal: '5'
      - keyword: SET
      - parameter: test_param
      - comparison_operator:
        - raw_comparison_operator: =
      - numeric_literal: '3'
      - keyword: WITH
      - bracketed:
        - start_bracket: (
        - parameter: isStrict
        - end_bracket: )
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: OR
    - keyword: REPLACE
    - keyword: FUNCTION
    - function_name:
      - function_name_identifier: increment
    - function_parameter_list:
      - bracketed:
        - start_bracket: (
        - parameter: i
        - data_type:
          - keyword: integer
        - end_bracket: )
    - keyword: RETURNS
    - data_type:
      - keyword: integer
    - function_definition:
      - keyword: PARALLEL
      - keyword: UNSAFE
      - keyword: AS
      - quoted_literal: |-
          $$
              BEGIN
                  RETURN i + 1;
              END;
          $$
      - language_clause:
        - keyword: LANGUAGE
        - naked_identifier: plpgsql
      - keyword: SUPPORT
      - parameter: my_function
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: FUNCTION
    - function_name:
      - function_name_identifier: add
    - function_parameter_list:
      - bracketed:
        - start_bracket: (
        - data_type:
          - keyword: integer
        - comma: ','
        - data_type:
          - keyword: integer
        - end_bracket: )
    - keyword: RETURNS
    - data_type:
      - keyword: integer
    - function_definition:
      - keyword: AS
      - quoted_literal: '''select $1 + $2;'''
      - language_clause:
        - keyword: LANGUAGE
        - naked_identifier: SQL
      - keyword: IMMUTABLE
      - keyword: RETURNS
      - keyword: 'NULL'
      - keyword: ON
      - keyword: 'NULL'
      - keyword: INPUT
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: OR
    - keyword: REPLACE
    - keyword: FUNCTION
    - function_name:
      - function_name_identifier: increment
    - function_parameter_list:
      - bracketed:
        - start_bracket: (
        - parameter: i
        - data_type:
          - keyword: integer
        - end_bracket: )
    - keyword: RETURNS
    - data_type:
      - keyword: integer
    - function_definition:
      - keyword: AS
      - quoted_literal: |-
          $$
                  BEGIN
                          RETURN i + 1;
                  END;
          $$
      - language_clause:
        - keyword: LANGUAGE
        - naked_identifier: plpgsql
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: FUNCTION
    - function_name:
      - function_name_identifier: dup
    - function_parameter_list:
      - bracketed:
        - start_bracket: (
        - keyword: in
        - data_type:
          - keyword: int
        - comma: ','
        - keyword: out
        - parameter: f1
        - data_type:
          - keyword: int
        - comma: ','
        - keyword: out
        - parameter: f2
        - data_type:
          - keyword: text
        - end_bracket: )
    - function_definition:
      - keyword: AS
      - quoted_literal: $$ SELECT $1, CAST($1 AS text) || ' is text' $$
      - language_clause:
        - keyword: LANGUAGE
        - naked_identifier: SQL
- statement_terminator: ;
- statement:
  - select_statement:
    - select_clause:
      - keyword: SELECT
      - select_clause_element:
        - wildcard_expression:
          - wildcard_identifier:
            - star: '*'
    - from_clause:
      - keyword: FROM
      - from_expression:
        - from_expression_element:
          - table_expression:
            - function:
              - function_name:
                - function_name_identifier: dup
              - bracketed:
                - start_bracket: (
                - expression:
                  - numeric_literal: '42'
                - end_bracket: )
- statement_terminator: ;
- statement:
  - create_type_statement:
    - keyword: CREATE
    - keyword: TYPE
    - object_reference:
      - naked_identifier: dup_result
    - keyword: AS
    - bracketed:
      - start_bracket: (
      - column_reference:
        - naked_identifier: f1
      - data_type:
        - keyword: int
      - comma: ','
      - column_reference:
        - naked_identifier: f2
      - data_type:
        - keyword: text
      - end_bracket: )
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: FUNCTION
    - function_name:
      - function_name_identifier: dup
    - function_parameter_list:
      - bracketed:
        - start_bracket: (
        - data_type:
          - keyword: int
        - end_bracket: )
    - keyword: RETURNS
    - data_type:
      - data_type_identifier: dup_result
    - function_definition:
      - keyword: AS
      - quoted_literal: $$ SELECT $1, CAST($1 AS text) || ' is text' $$
      - language_clause:
        - keyword: LANGUAGE
        - naked_identifier: SQL
- statement_terminator: ;
- statement:
  - select_statement:
    - select_clause:
      - keyword: SELECT
      - select_clause_element:
        - wildcard_expression:
          - wildcard_identifier:
            - star: '*'
    - from_clause:
      - keyword: FROM
      - from_expression:
        - from_expression_element:
          - table_expression:
            - function:
              - function_name:
                - function_name_identifier: dup
              - bracketed:
                - start_bracket: (
                - expression:
                  - numeric_literal: '42'
                - end_bracket: )
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: FUNCTION
    - function_name:
      - function_name_identifier: dup
    - function_parameter_list:
      - bracketed:
        - start_bracket: (
        - data_type:
          - keyword: int
        - end_bracket: )
    - keyword: RETURNS
    - keyword: TABLE
    - bracketed:
      - start_bracket: (
      - column_reference:
        - naked_identifier: f1
      - data_type:
        - keyword: int
      - comma: ','
      - column_reference:
        - naked_identifier: f2
      - data_type:
        - keyword: text
      - end_bracket: )
    - function_definition:
      - keyword: AS
      - quoted_literal: $$ SELECT $1, CAST($1 AS text) || ' is text' $$
      - language_clause:
        - keyword: LANGUAGE
        - naked_identifier: SQL
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: FUNCTION
    - function_name:
      - function_name_identifier: dup
    - function_parameter_list:
      - bracketed:
        - start_bracket: (
        - data_type:
          - keyword: int
        - end_bracket: )
    - keyword: RETURNS
    - keyword: TABLE
    - bracketed:
      - start_bracket: (
      - column_reference:
        - quoted_identifier: '"f1"'
      - data_type:
        - keyword: int
      - comma: ','
      - column_reference:
        - quoted_identifier: '"f2"'
      - data_type:
        - keyword: text
      - end_bracket: )
    - function_definition:
      - keyword: AS
      - quoted_literal: $$ SELECT $1, CAST($1 AS text) || ' is text' $$
      - language_clause:
        - keyword: LANGUAGE
        - naked_identifier: SQL
- statement_terminator: ;
- statement:
  - select_statement:
    - select_clause:
      - keyword: SELECT
      - select_clause_element:
        - wildcard_expression:
          - wildcard_identifier:
            - star: '*'
    - from_clause:
      - keyword: FROM
      - from_expression:
        - from_expression_element:
          - table_expression:
            - function:
              - function_name:
                - function_name_identifier: dup
              - bracketed:
                - start_bracket: (
                - expression:
                  - numeric_literal: '42'
                - end_bracket: )
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: FUNCTION
    - function_name:
      - function_name_identifier: check_password
    - function_parameter_list:
      - bracketed:
        - start_bracket: (
        - parameter: uname
        - data_type:
          - keyword: TEXT
        - comma: ','
        - parameter: pass
        - data_type:
          - keyword: TEXT
        - end_bracket: )
    - keyword: RETURNS
    - data_type:
      - keyword: BOOLEAN
    - function_definition:
      - keyword: AS
      - quoted_literal: |-
          $$
          DECLARE passed BOOLEAN;
          BEGIN
                  SELECT  (pwd = $2) INTO passed
                  FROM    pwds
                  WHERE   username = $1;

                  RETURN passed;
          END;
          $$
      - language_clause:
        - keyword: LANGUAGE
        - naked_identifier: plpgsql
      - keyword: SECURITY
      - keyword: DEFINER
      - keyword: SET
      - parameter: search_path
      - comparison_operator:
        - raw_comparison_operator: =
      - parameter: admin
      - comma: ','
      - parameter: pg_temp
- statement_terminator: ;
- statement:
  - transaction_statement:
    - keyword: BEGIN
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: FUNCTION
    - function_name:
      - function_name_identifier: check_password
    - function_parameter_list:
      - bracketed:
        - start_bracket: (
        - parameter: uname
        - data_type:
          - keyword: TEXT
        - comma: ','
        - parameter: pass
        - data_type:
          - keyword: TEXT
        - end_bracket: )
    - keyword: RETURNS
    - data_type:
      - keyword: BOOLEAN
    - function_definition:
      - keyword: AS
      - quoted_literal: |-
          $$
          DECLARE passed BOOLEAN;
          BEGIN
                  SELECT  (pwd = $2) INTO passed
                  FROM    pwds
                  WHERE   username = $1;

                  RETURN passed;
          END;
          $$
      - language_clause:
        - keyword: LANGUAGE
        - naked_identifier: plpgsql
      - keyword: SECURITY
      - keyword: DEFINER
- statement_terminator: ;
- statement:
  - access_statement:
    - keyword: REVOKE
    - keyword: ALL
    - keyword: ON
    - keyword: FUNCTION
    - function_name:
      - function_name_identifier: check_password
    - function_parameter_list:
      - bracketed:
        - start_bracket: (
        - parameter: uname
        - data_type:
          - keyword: TEXT
        - comma: ','
        - parameter: pass
        - data_type:
          - keyword: TEXT
        - end_bracket: )
    - keyword: FROM
    - object_reference:
      - naked_identifier: PUBLIC
- statement_terminator: ;
- statement:
  - access_statement:
    - keyword: GRANT
    - keyword: EXECUTE
    - keyword: ON
    - keyword: FUNCTION
    - function_name:
      - function_name_identifier: check_password
    - function_parameter_list:
      - bracketed:
        - start_bracket: (
        - parameter: uname
        - data_type:
          - keyword: TEXT
        - comma: ','
        - parameter: pass
        - data_type:
          - keyword: TEXT
        - end_bracket: )
    - keyword: TO
    - role_reference:
      - naked_identifier: admins
- statement_terminator: ;
- statement:
  - transaction_statement:
    - keyword: COMMIT
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: OR
    - keyword: REPLACE
    - keyword: FUNCTION
    - function_name:
      - naked_identifier: public
      - dot: .
      - function_name_identifier: setof_test
    - function_parameter_list:
      - bracketed:
        - start_bracket: (
        - end_bracket: )
    - keyword: RETURNS
    - keyword: SETOF
    - data_type:
      - keyword: text
    - function_definition:
      - language_clause:
        - keyword: LANGUAGE
        - naked_identifier: sql
      - keyword: STABLE
      - keyword: STRICT
      - keyword: AS
      - quoted_literal: |-
          $function$
          select unnest(array['hi', 'test'])
          $function$
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: OR
    - keyword: REPLACE
    - keyword: FUNCTION
    - function_name:
      - naked_identifier: public
      - dot: .
      - function_name_identifier: foo
    - function_parameter_list:
      - bracketed:
        - start_bracket: (
        - parameter: _a
        - data_type:
          - keyword: TEXT
        - comma: ','
        - parameter: _$b
        - data_type:
          - keyword: INT
        - end_bracket: )
    - keyword: RETURNS
    - data_type:
      - keyword: FLOAT
    - function_definition:
      - keyword: AS
      - quoted_literal: |-
          $$
            RETURN 0.0
          $$
      - language_clause:
        - keyword: LANGUAGE
        - naked_identifier: plpgsql
      - keyword: STABLE
      - keyword: PARALLEL
      - keyword: SAFE
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: FUNCTION
    - function_name:
      - function_name_identifier: _add
    - function_parameter_list:
      - bracketed:
        - start_bracket: (
        - data_type:
          - keyword: integer
        - comma: ','
        - data_type:
          - keyword: integer
        - end_bracket: )
    - keyword: RETURNS
    - data_type:
      - keyword: integer
    - function_definition:
      - keyword: AS
      - quoted_literal: '''select $1 + $2;'''
      - language_clause:
        - keyword: LANGUAGE
        - naked_identifier: SQL
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: FUNCTION
    - function_name:
      - function_name_identifier: _$add
    - function_parameter_list:
      - bracketed:
        - start_bracket: (
        - data_type:
          - keyword: integer
        - comma: ','
        - data_type:
          - keyword: integer
        - end_bracket: )
    - keyword: RETURNS
    - data_type:
      - keyword: integer
    - function_definition:
      - keyword: AS
      - quoted_literal: '''select $1 + $2;'''
      - language_clause:
        - keyword: LANGUAGE
        - naked_identifier: SQL
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: create
    - keyword: function
    - function_name:
      - function_name_identifier: test2
    - function_parameter_list:
      - bracketed:
        - start_bracket: (
        - parameter: x
        - data_type:
          - datetime_type_identifier:
            - keyword: date
        - comparison_operator:
          - raw_comparison_operator: =
        - expression:
          - bare_function: current_date
        - end_bracket: )
    - keyword: returns
    - data_type:
      - datetime_type_identifier:
        - keyword: date
    - function_definition:
      - keyword: as
      - quoted_literal: |-
          $$
            begin
              return x;
            end;
          $$
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: create
    - keyword: function
    - function_name:
      - function_name_identifier: test3
    - function_parameter_list:
      - bracketed:
        - start_bracket: (
        - parameter: x
        - data_type:
          - datetime_type_identifier:
            - keyword: date
        - keyword: default
        - expression:
          - bare_function: current_date
        - end_bracket: )
    - keyword: returns
    - data_type:
      - datetime_type_identifier:
        - keyword: date
    - function_definition:
      - keyword: as
      - quoted_literal: |-
          $$
            begin
              return x;
            end;
          $$
- statement_terminator: ;
