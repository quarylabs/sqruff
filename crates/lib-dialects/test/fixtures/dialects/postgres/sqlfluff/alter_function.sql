-- Issue:2089
ALTER FUNCTION fn OWNER TO auser;
ALTER FUNCTION fn(int, arg2 text) OWNER TO auser;
ALTER FUNCTION fn OWNER TO auser;
ALTER FUNCTION fn OWNER TO CURRENT_ROLE;
ALTER FUNCTION fn OWNER TO CURRENT_USER;
ALTER FUNCTION fn OWNER TO SESSION_USER;
ALTER FUNCTION public.fn OWNER TO auser;
ALTER FUNCTION public.fn OWNER TO CURRENT_USER;
ALTER FUNCTION public.fn OWNER TO CURRENT_ROLE;
ALTER FUNCTION public.fn OWNER TO SESSION_USER;
ALTER FUNCTION fn CALLED ON NULL INPUT;
ALTER FUNCTION public.fn CALLED ON NULL INPUT;
ALTER FUNCTION fn CALLED ON NULL INPUT RESTRICT;
ALTER FUNCTION fn(arg1 int) CALLED ON NULL INPUT RESTRICT;
ALTER FUNCTION public.fn(arg1 int) CALLED ON NULL INPUT RESTRICT;
ALTER FUNCTION fn RETURNS NULL ON NULL INPUT;
ALTER FUNCTION fn(int, text) RETURNS NULL ON NULL INPUT;
ALTER FUNCTION fn RETURNS NULL ON NULL INPUT RESTRICT;
ALTER FUNCTION public.fn RETURNS NULL ON NULL INPUT RESTRICT;
ALTER FUNCTION fn(int, text) RETURNS NULL ON NULL INPUT RESTRICT;
ALTER FUNCTION fn STRICT;
ALTER FUNCTION fn(int) STRICT;
ALTER FUNCTION fn STRICT RESTRICT;
ALTER FUNCTION public.fn STRICT RESTRICT;
ALTER FUNCTION fn(arg1 int) STRICT RESTRICT;
ALTER FUNCTION fn IMMUTABLE;
ALTER FUNCTION fn IMMUTABLE RESTRICT;
ALTER FUNCTION public.fn IMMUTABLE RESTRICT;
ALTER FUNCTION fn STABLE;
ALTER FUNCTION public.fn STABLE;
ALTER FUNCTION fn STABLE RESTRICT;
ALTER FUNCTION fn VOLATILE;
ALTER FUNCTION fn VOLATILE RESTRICT;
ALTER FUNCTION fn(int, arg2 text) IMMUTABLE;
ALTER FUNCTION fn(int, arg2 text) IMMUTABLE RESTRICT;
ALTER FUNCTION public.fn(int, arg2 text) IMMUTABLE RESTRICT;
ALTER FUNCTION fn(int) STABLE;
ALTER FUNCTION fn(int) STABLE RESTRICT;
ALTER FUNCTION fn(arg int) VOLATILE;
ALTER FUNCTION fn(arg int) VOLATILE RESTRICT;
ALTER FUNCTION fn LEAKPROOF;
ALTER FUNCTION fn LEAKPROOF RESTRICT;
ALTER FUNCTION fn(int, arg2 text) LEAKPROOF;
ALTER FUNCTION fn(int, arg2 text) LEAKPROOF RESTRICT;
ALTER FUNCTION fn NOT LEAKPROOF;
ALTER FUNCTION fn NOT LEAKPROOF RESTRICT;
ALTER FUNCTION fn(arg int) NOT LEAKPROOF;
ALTER FUNCTION fn(arg int) NOT LEAKPROOF RESTRICT;
ALTER FUNCTION fn SECURITY INVOKER;
ALTER FUNCTION fn SECURITY INVOKER RESTRICT;
ALTER FUNCTION fn(int, text, boolean) SECURITY INVOKER;
ALTER FUNCTION fn(int, text, boolean) SECURITY INVOKER RESTRICT;
ALTER FUNCTION fn EXTERNAL SECURITY INVOKER;
ALTER FUNCTION fn EXTERNAL SECURITY INVOKER RESTRICT;
ALTER FUNCTION fn(int, text) EXTERNAL SECURITY INVOKER;
ALTER FUNCTION fn(int, text) EXTERNAL SECURITY INVOKER RESTRICT;
ALTER FUNCTION fn SECURITY DEFINER;
ALTER FUNCTION fn SECURITY DEFINER RESTRICT;
ALTER FUNCTION fn EXTERNAL SECURITY DEFINER;
ALTER FUNCTION fn EXTERNAL SECURITY DEFINER RESTRICT;
ALTER FUNCTION fn(arg1 int, arg2 text, boolean) EXTERNAL SECURITY DEFINER;
ALTER FUNCTION fn(arg1 int, arg2 text, boolean) EXTERNAL SECURITY DEFINER RESTRICT;
ALTER FUNCTION fn PARALLEL UNSAFE;
ALTER FUNCTION fn(arg int) PARALLEL UNSAFE;
ALTER FUNCTION fn PARALLEL UNSAFE RESTRICT;
ALTER FUNCTION fn(int) PARALLEL UNSAFE RESTRICT;
ALTER FUNCTION fn PARALLEL RESTRICTED;
ALTER FUNCTION fn PARALLEL RESTRICTED RESTRICT;
ALTER FUNCTION fn(int, text) PARALLEL RESTRICTED;
ALTER FUNCTION fn(text) PARALLEL RESTRICTED RESTRICT;
ALTER FUNCTION fn PARALLEL SAFE;
ALTER FUNCTION public.fn PARALLEL SAFE RESTRICT;
ALTER FUNCTION fn(text, arg2 int) PARALLEL SAFE;
ALTER FUNCTION fn(text, text) PARALLEL SAFE RESTRICT;
ALTER FUNCTION fn COST 10;
ALTER FUNCTION fn COST 10 RESTRICT;
ALTER FUNCTION fn(arg1 int, arg2 text) COST 10;
ALTER FUNCTION fn(arg1 int, arg2 text) COST 10 RESTRICT;
ALTER FUNCTION fn ROWS 10;
ALTER FUNCTION fn ROWS 10 RESTRICT;
ALTER FUNCTION fn(arg1 int, arg2 text, int, int) ROWS 10;
ALTER FUNCTION fn(arg1 int, arg2 text, int, int) ROWS 10 RESTRICT;
ALTER FUNCTION fn SUPPORT supportfn;
ALTER FUNCTION public.fn SUPPORT supportfn;
ALTER FUNCTION fn(int, int) SUPPORT supportfn;
ALTER FUNCTION fn(int, int) SUPPORT supportfn RESTRICT;
ALTER FUNCTION fn SET param1 TO 1;
ALTER FUNCTION fn SET param1 TO 'value';
ALTER FUNCTION fn SET param1 TO DEFAULT;
ALTER FUNCTION fn SET param1 TO 'value' RESTRICT;
ALTER FUNCTION fn(int, int) SET param1 TO DEFAULT;
ALTER FUNCTION fn(int, int) SET param1 TO DEFAULT RESTRICT;
ALTER FUNCTION fn SET param1 TO avalue;
ALTER FUNCTION fn SET param1 = 1;
ALTER FUNCTION fn SET param1 = 'value';
ALTER FUNCTION fn SET param1 = avalue;
ALTER FUNCTION fn SET param1 = DEFAULT;
ALTER FUNCTION fn(arg1 int, arg2 text) SET param1 = 'value';
ALTER FUNCTION fn(int) SET param1 = avalue;
ALTER FUNCTION fn(text, int) SET param1 = avalue;
ALTER FUNCTION fn(int, int) SUPPORT supportfn;
ALTER FUNCTION fn SET param1 FROM CURRENT;
ALTER FUNCTION fn(boolean) SET param1 FROM CURRENT;
ALTER FUNCTION public.fn(boolean, int) SET param1 FROM CURRENT;
ALTER FUNCTION fn RESET param1;
ALTER FUNCTION fn RESET ALL;
