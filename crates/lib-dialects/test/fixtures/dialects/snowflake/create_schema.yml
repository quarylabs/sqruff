file:
- statement:
  - create_clone_statement:
    - keyword: create
    - keyword: schema
    - object_reference:
      - naked_identifier: mytestschema_clone_restore
    - keyword: clone
    - object_reference:
      - naked_identifier: testschema
- statement_terminator: ;
- statement:
  - create_clone_statement:
    - keyword: create
    - keyword: schema
    - object_reference:
      - naked_identifier: mytestdatabase1
      - dot: .
      - naked_identifier: mytestschema_clone_restore
    - keyword: clone
    - object_reference:
      - naked_identifier: mytestdatabase2
      - dot: .
      - naked_identifier: testschema
- statement_terminator: ;
- statement:
  - create_clone_statement:
    - keyword: create
    - keyword: schema
    - object_reference:
      - naked_identifier: mytestschema_clone_restore
    - keyword: clone
    - object_reference:
      - naked_identifier: testschema
    - from_before_expression:
      - keyword: before
      - bracketed:
        - start_bracket: (
        - keyword: timestamp
        - parameter_assigner: =>
        - expression:
          - function:
            - function_name:
              - function_name_identifier: to_timestamp
            - function_contents:
              - bracketed:
                - start_bracket: (
                - expression:
                  - numeric_literal: '40'
                  - binary_operator: '*'
                  - numeric_literal: '365'
                  - binary_operator: '*'
                  - numeric_literal: '86400'
                - end_bracket: )
        - end_bracket: )
- statement_terminator: ;
- statement:
  - create_schema_statement:
    - keyword: create
    - keyword: schema
    - table_reference:
      - object_reference:
        - naked_identifier: mytestschema
    - schema_object_properties:
      - comment_equals_clause:
        - keyword: comment
        - comparison_operator:
          - raw_comparison_operator: =
        - quoted_literal: '''My test schema.'''
- statement_terminator: ;
- statement:
  - create_schema_statement:
    - keyword: create
    - keyword: schema
    - table_reference:
      - object_reference:
        - naked_identifier: mytestschema
    - tag_bracketed_equals:
      - keyword: tag
      - bracketed:
        - start_bracket: (
        - tag_reference:
          - naked_identifier: tag1
        - comparison_operator:
          - raw_comparison_operator: =
        - quoted_literal: '''foo'''
        - comma: ','
        - tag_reference:
          - naked_identifier: tag2
        - comparison_operator:
          - raw_comparison_operator: =
        - quoted_literal: '''bar'''
        - end_bracket: )
- statement_terminator: ;
- statement:
  - create_schema_statement:
    - keyword: create
    - keyword: schema
    - table_reference:
      - object_reference:
        - naked_identifier: mytestschema
    - keyword: with
    - keyword: managed
    - keyword: access
- statement_terminator: ;
- statement:
  - create_schema_statement:
    - keyword: create
    - keyword: transient
    - keyword: schema
    - keyword: if
    - keyword: not
    - keyword: exists
    - table_reference:
      - object_reference:
        - naked_identifier: mytestschema
    - schema_object_properties:
      - keyword: default_ddl_collation
      - comparison_operator:
        - raw_comparison_operator: =
      - quoted_literal: '''de_DE'''
- statement_terminator: ;
