file:
- statement:
  - statement:
    - keyword: DECLARE
    - tsql_variable: '@LargeText'
    - data_type:
      - data_type_identifier: NVARCHAR
      - bracketed_arguments:
        - bracketed_arguments:
          - bracketed:
            - start_bracket: (
            - keyword: MAX
            - end_bracket: )
- statement_terminator: ;
- statement:
  - statement:
    - keyword: DECLARE
    - tsql_variable: '@BigString'
    - data_type:
      - data_type_identifier: VARCHAR
      - bracketed_arguments:
        - bracketed_arguments:
          - bracketed:
            - start_bracket: (
            - keyword: MAX
            - end_bracket: )
- statement_terminator: ;
- statement:
  - statement:
    - keyword: DECLARE
    - tsql_variable: '@BinaryData'
    - data_type:
      - data_type_identifier: VARBINARY
      - bracketed_arguments:
        - bracketed_arguments:
          - bracketed:
            - start_bracket: (
            - keyword: MAX
            - end_bracket: )
- statement_terminator: ;
- statement:
  - statement:
    - keyword: DECLARE
    - tsql_variable: '@LargeText2'
    - data_type:
      - data_type_identifier: NVARCHAR
      - bracketed_arguments:
        - bracketed_arguments:
          - bracketed:
            - start_bracket: (
            - numeric_literal:
              - sign_indicator: '-'
              - numeric_literal: '1'
            - end_bracket: )
- statement_terminator: ;
- statement:
  - statement:
    - keyword: DECLARE
    - tsql_variable: '@BigString2'
    - data_type:
      - data_type_identifier: VARCHAR
      - bracketed_arguments:
        - bracketed_arguments:
          - bracketed:
            - start_bracket: (
            - numeric_literal:
              - sign_indicator: '-'
              - numeric_literal: '1'
            - end_bracket: )
- statement_terminator: ;
- statement:
  - statement:
    - keyword: DECLARE
    - tsql_variable: '@BinaryData2'
    - data_type:
      - data_type_identifier: VARBINARY
      - bracketed_arguments:
        - bracketed_arguments:
          - bracketed:
            - start_bracket: (
            - numeric_literal:
              - sign_indicator: '-'
              - numeric_literal: '1'
            - end_bracket: )
- statement_terminator: ;
- file:
  - word: CREATE
  - word: TABLE
  - word: TestMaxTypes
  - start_bracket: (
  - word: ID
  - word: INT
  - word: IDENTITY
  - start_bracket: (
  - numeric_literal: '1'
  - comma: ','
  - numeric_literal: '1'
  - end_bracket: )
  - word: PRIMARY
  - word: KEY
  - comma: ','
  - word: LargeText
  - word: NVARCHAR
  - start_bracket: (
  - word: MAX
  - end_bracket: )
  - comma: ','
  - word: BigString
  - word: VARCHAR
  - start_bracket: (
  - word: MAX
  - end_bracket: )
  - comma: ','
  - word: XmlData
  - word: XML
  - comma: ','
  - word: BinaryData
  - word: VARBINARY
  - start_bracket: (
  - word: MAX
  - end_bracket: )
  - comma: ','
  - word: RequiredText
  - word: NVARCHAR
  - start_bracket: (
  - word: MAX
  - end_bracket: )
  - word: NOT
  - word: 'NULL'
  - comma: ','
  - word: DefaultText
  - word: VARCHAR
  - start_bracket: (
  - word: MAX
  - end_bracket: )
  - word: DEFAULT
  - single_quote: '''Default Value'''
  - end_bracket: )
  - semicolon: ;
  - word: CREATE
  - word: TABLE
  - word: TestNegativeOneTypes
  - start_bracket: (
  - word: ID
  - word: INT
  - word: IDENTITY
  - start_bracket: (
  - numeric_literal: '1'
  - comma: ','
  - numeric_literal: '1'
  - end_bracket: )
  - word: PRIMARY
  - word: KEY
  - comma: ','
  - word: LargeText
  - word: NVARCHAR
  - start_bracket: (
  - minus: '-'
  - numeric_literal: '1'
  - end_bracket: )
  - comma: ','
  - word: BigString
  - word: VARCHAR
  - start_bracket: (
  - minus: '-'
  - numeric_literal: '1'
  - end_bracket: )
  - comma: ','
  - word: BinaryData
  - word: VARBINARY
  - start_bracket: (
  - minus: '-'
  - numeric_literal: '1'
  - end_bracket: )
  - comma: ','
  - word: FixedText
  - word: NVARCHAR
  - start_bracket: (
  - numeric_literal: '100'
  - end_bracket: )
  - comma: ','
  - word: SmallString
  - word: VARCHAR
  - start_bracket: (
  - numeric_literal: '50'
  - end_bracket: )
  - end_bracket: )
  - semicolon: ;
  - word: SELECT
  - word: CAST
  - start_bracket: (
  - word: column1
  - word: AS
  - word: NVARCHAR
  - start_bracket: (
  - word: MAX
  - end_bracket: )
  - end_bracket: )
  - word: AS
  - word: TextMax
  - comma: ','
  - word: CAST
  - start_bracket: (
  - word: column2
  - word: AS
  - word: VARCHAR
  - start_bracket: (
  - word: MAX
  - end_bracket: )
  - end_bracket: )
  - word: AS
  - word: StringMax
  - comma: ','
  - word: CAST
  - start_bracket: (
  - word: column3
  - word: AS
  - word: VARBINARY
  - start_bracket: (
  - word: MAX
  - end_bracket: )
  - end_bracket: )
  - word: AS
  - word: BinaryMax
  - word: FROM
  - word: SourceTable
  - semicolon: ;
  - word: SELECT
  - word: CAST
  - start_bracket: (
  - word: column1
  - word: AS
  - word: NVARCHAR
  - start_bracket: (
  - minus: '-'
  - numeric_literal: '1'
  - end_bracket: )
  - end_bracket: )
  - word: AS
  - word: TextNegOne
  - comma: ','
  - word: CAST
  - start_bracket: (
  - word: column2
  - word: AS
  - word: VARCHAR
  - start_bracket: (
  - minus: '-'
  - numeric_literal: '1'
  - end_bracket: )
  - end_bracket: )
  - word: AS
  - word: StringNegOne
  - comma: ','
  - word: CAST
  - start_bracket: (
  - word: column3
  - word: AS
  - word: VARBINARY
  - start_bracket: (
  - minus: '-'
  - numeric_literal: '1'
  - end_bracket: )
  - end_bracket: )
  - word: AS
  - word: BinaryNegOne
  - word: FROM
  - word: SourceTable
  - semicolon: ;
  - word: SELECT
  - word: CONVERT
  - start_bracket: (
  - word: NVARCHAR
  - start_bracket: (
  - word: MAX
  - end_bracket: )
  - comma: ','
  - word: column1
  - end_bracket: )
  - word: AS
  - word: ConvertedMax
  - comma: ','
  - word: CONVERT
  - start_bracket: (
  - word: VARCHAR
  - start_bracket: (
  - minus: '-'
  - numeric_literal: '1'
  - end_bracket: )
  - comma: ','
  - word: column2
  - end_bracket: )
  - word: AS
  - word: ConvertedNegOne
  - word: FROM
  - word: SourceTable
  - semicolon: ;
  - word: CREATE
  - word: FUNCTION
  - word: GetLongText
  - start_bracket: (
  - tsql_variable: '@ID'
  - word: INT
  - end_bracket: )
  - word: RETURNS
  - word: NVARCHAR
  - start_bracket: (
  - word: MAX
  - end_bracket: )
  - word: AS
  - word: BEGIN
  - word: DECLARE
  - tsql_variable: '@Result'
  - word: NVARCHAR
  - start_bracket: (
  - word: MAX
  - end_bracket: )
  - semicolon: ;
  - word: SELECT
  - tsql_variable: '@Result'
  - raw_comparison_operator: =
  - word: LongTextColumn
  - word: FROM
  - word: TextTable
  - word: WHERE
  - word: ID
  - raw_comparison_operator: =
  - tsql_variable: '@ID'
  - semicolon: ;
  - word: RETURN
  - tsql_variable: '@Result'
  - semicolon: ;
  - word: END
  - semicolon: ;
  - word: CREATE
  - word: PROCEDURE
  - word: ProcessLargeData
  - tsql_variable: '@InputText'
  - word: NVARCHAR
  - start_bracket: (
  - word: MAX
  - end_bracket: )
  - comma: ','
  - tsql_variable: '@OutputText'
  - word: NVARCHAR
  - start_bracket: (
  - minus: '-'
  - numeric_literal: '1'
  - end_bracket: )
  - word: OUTPUT
  - word: AS
  - word: BEGIN
  - word: SET
  - tsql_variable: '@OutputText'
  - raw_comparison_operator: =
  - word: UPPER
  - start_bracket: (
  - tsql_variable: '@InputText'
  - end_bracket: )
  - semicolon: ;
  - word: END
  - semicolon: ;
  - word: CREATE
  - word: TABLE
  - word: TempID
  - word: INT
  - comma: ','
  - word: TempText
  - word: NVARCHAR
  - start_bracket: (
  - word: MAX
  - end_bracket: )
  - comma: ','
  - word: TempBinary
  - word: VARBINARY
  - start_bracket: (
  - minus: '-'
  - numeric_literal: '1'
  - end_bracket: )
  - end_bracket: )
  - semicolon: ;
  - word: CREATE
  - word: TYPE
  - word: LargeTextTable
  - word: AS
  - word: TABLE
  - start_bracket: (
  - word: TextID
  - word: INT
  - comma: ','
  - word: TextValue
  - word: NVARCHAR
  - start_bracket: (
  - word: MAX
  - end_bracket: )
  - end_bracket: )
  - semicolon: ;
  - word: DECLARE
  - tsql_variable: '@MixedTypes'
  - word: TABLE
  - start_bracket: (
  - word: SmallText
  - word: NVARCHAR
  - start_bracket: (
  - numeric_literal: '10'
  - end_bracket: )
  - comma: ','
  - word: MediumText
  - word: NVARCHAR
  - start_bracket: (
  - numeric_literal: '4000'
  - end_bracket: )
  - comma: ','
  - word: LargeText
  - word: NVARCHAR
  - start_bracket: (
  - word: MAX
  - end_bracket: )
  - comma: ','
  - word: HugeText
  - word: NVARCHAR
  - start_bracket: (
  - minus: '-'
  - numeric_literal: '1'
  - end_bracket: )
  - comma: ','
  - word: RegularInt
  - word: INT
  - comma: ','
  - word: BigBinary
  - word: VARBINARY
  - start_bracket: (
  - word: MAX
  - end_bracket: )
  - end_bracket: )
  - semicolon: ;
